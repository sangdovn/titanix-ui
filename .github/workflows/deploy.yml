name: Deploy to PRoduction

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  IMAGE_NAME: ${{ secrests.DOCKERHUB_USERNAME }}/${{ vars.APP_NAME }}:${{ vars.APP_VERSION }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t $IMAGE_NAME .

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker image
        run: docker push $IMAGE_NAME

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Ensure target directory exists
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd /home/${{ secrets.SERVER_USERNAME }}
            mkdir ${{ vars.APP_NAME }}
            rm -rf ${{ vars.APP_NAME }}/* ${{ vars.APP_NAME }}/.*

      - name: Copy docker-compose.yml to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          source: 'docker-compose.yml'
          target: /home/${{ secrets.SERVER_USERNAME }}/${{ vars.APP_NAME }}

      - name: SSH to server and deploy
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            export IMAGE_NAME="${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.APP_NAME }}:${{ vars.APP_VERSION }}"
            export CONTAINER_NAME="${{ vars.APP_NAME }}"

            cd /home/${{ secrets.SERVER_USERNAME }}/${{ vars.APP_NAME }}
            docker compose down
            docker rm -f $CONTAINER_NAME
            docker rmi -f $IMAGE_NAME
            docker compose -f docker-compose.yml pull
            docker compose -f docker-compose.yml up -d
